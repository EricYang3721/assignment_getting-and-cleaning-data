C <- T <- S <- c(-1, +1)
design <- expand.grid(C=C, T=T, S=S)
C <- design$C
T <- design$T
S <- design$S
y <- c(5, 30, 6, 33, 4, 3, 5, 4)
# water <- lm(y ~ C + T + S + C*T + C*S + T*S + C*T*S)
water <- lm(y~(C+S+T)^3)
summary(water)
C <- T <- S <- c(-1, +1)
design <- expand.grid(C=C, T=T, S=S)
C <- design$C
T <- design$T
S <- design$S
y <- c(5, 30, 6, 33, 4, 3, 5, 4)
# water <- lm(y ~ C + T + S + C*T + C*S + T*S + C*T*S)
water <- lm(y~(C+S+T)^3)
summary(water)
plot.new(y)
C <- T <- S <- c(-1, +1)
design <- expand.grid(C=C, T=T, S=S)
C <- design$C
T <- design$T
S <- design$S
y <- c(5, 30, 6, 33, 4, 3, 5, 4)
# water <- lm(y ~ C + T + S + C*T + C*S + T*S + C*T*S)
water <- lm(y~(C+S+T)^3)
summary(water)
plot.new(C)
C
q()
q()
clc
clear
cl
cle
help(clear)
help(clear)
p
add_trace(z=z3, type="surface", showscale=FALSE, opacity=0.98)
wireframe(z,drape=TRUE)
persp(x, y, z)
surface3d(x, y, z)
main="Half of a Torus")
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
install_github("StatsWithR/statsr")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages(readr)
install.packages("readr")
install.package("tidyr")
install.packages("tidyr")
install.packages("readr")
install.packages("tidyr")
install.packages("dplyr")
getwd()
setwd("C:/Users/USX27295/Downloads/getdata%2Fprojectfiles%2FUCI HAR Dataset/UCI HAR Dataset")
subject_train <- read.table("./train/subject_train.txt")
train_data_x <- read.table("./train/X_train.txt")
train_data_y <- read.table("./train/y_train.txt")
column_names <- c("subject_id", subject_train, "activity")
library(dplyr)
train_data <- bind_cols(subject_train, train_data_x)
train_data <- bind_cols(train_data, train_data_y)
features <- read.table("features.txt")[,2]
features <- c("subject_id", as.vector(features), "activity")
colnames(train_data) <- features
head(train_data)
View(train_data_y)
subject_test <- read.table("./test/subject_test.txt")
test_data_x <- read.table("./test/X_test.txt")
dim(test_data_x)
test_data_y <- read.table("./test/y_test.txt")
test_data <- bind_cols(subject_test, test_data_x)
test_data <- bind_cols(test_data, test_data_y)
data <- bind_rows(train_data, test_data)
?select
abc <- c("a-mean()", "b-mean()", "c-std()", "e-mean()", "f(adsf,mean)", "gads", "had","i-mean()")
grep(pattern = 'mean()'|"std()", x=abc, value=TRUE)
grep(pattern = c("mean()","std()"), x=abc, value=TRUE)
grep(pattern = '(mean()|std())', x=abc, value=TRUE)
grep(pattern = '(mean\\(\\)|std\\(\\))', x=abc, value=TRUE)
substracted_features <- grep(pattern = '(mean()|std())', x=features, value=TRUE)
head(sub)
head(substracted_features)
head(substracted_features, 20)
substracted_features <- c("subject_id", substracted_features, "activity")
head(substracted_features)
tail(substracted_features)
substracted_data <- select(data, substracted_features)
select(abc, contains("mean()"))
substracted_data <- select(data, as.vector(substracted_features)
)
substracted_data <- select(data, .dots = substracted_features)
col_vector <- substracted_features
class(col_vector)
col_vector <- c("year", "month", "day")
class(col_vector)
col_vector <- substracted_features
substracted_data <- select(data, col_vector)
select(data, tBodyAcc-mean()-X)
head(data)
data<-bind_rows(train_data, test_data)
dim(data)
rm("data")
data<-bind_rows(train_data, test_data)
rm("data")
colnames(test_data) <- features
data<-bind_rows(train_data, test_data)
head(data)
rm(list = ls())
library(dplyr)
subject_train <- read.table
train_data_x <- read.table("./train/X_train.txt")       # read train features 7352X561
train_data_y <- read.table("./train/y_train.txt") # read tain 7532X1 label
train_data <- bind_cols(subject_train, train_data_x) # Bind subject_train in first column
train_data <- bind_cols(train_data, train_data_y) # Bind label in last column
features <- read.table("features.txt")[,2] # 561X1
features <- c("subject_id", as.vector(features), "activity")   # add "subject_id" from subject_train, "activity" from label
colnames(train_data) <- features   # Add names to each column of the train_data
subject_train <- read.table("./train/subject_train.txt")
train_data_x <- read.table("./train/X_train.txt")
train_data_y <- read.table("./train/y_train.txt")
train_data <- bind_cols(subject_train, train_data_x)
train_data <- bind_cols(train_data, train_data_y)
features <- read.table("features.txt")[,2]
features <- c("subject_id", as.vector(features), "activity")
colnames(train_data) <- features
subject_test <- read.table("./test/subject_test.txt")
test_data_x <- read.table("./test/X_test.txt")
test_data_y <- read.table("./test/y_test.txt")
test_data <- bind_cols(subject_test, test_data_x)
test_data <- bind_cols(test_data, test_data_y)
colnames(test_data) <- features
data <- bind_rows(train_data, test_data)
View(subject_train)
View(test_data)
View(train_data)
View(test_data)
View(train_data)
View(data)
View(data)
names(data)
features
test_data[1:5, c(304,318)]
test_data[1:5, c(304,318,332)]
View(subject_train)
View(subject_train)
View(data)
View(data)
View(train_data)
train_data[1:5, c(304,318,332)]
?bind_rows
data2<-bind_rows(train_data,test_data, .id=features)
features_unique <- make.unique(features)
features_unique
colnames(train_data) <- features_unique
colnames(test_data) <- features_unique
data <- bind_rows(train_data, test_data,)
data <- bind_rows(train_data, test_data)
data[,substracted_features]
substracted_features <- grep(pattern = '(mean()|std())', x=features, value=TRUE)
substracted_features <- c("subject_id", features, "activity")
data[,substracted_features]
substracted_data <- data[,substracted_features]
substracted_features
substracted_features <- grep(pattern = '(mean()|std())', x=features, value=TRUE)
substracted_features
?select
data2<-select(data, contains('(mean()|std())'))
data2<-select(data, contains('mean()|std()'))
data2<-select(data, contains('mean()'))
data2<-data[,substracted_features]
substracted_features <- c("subject_id", features, "activity")
data2<-data[,substracted_features]
substracted_features <- c("subject_id", substracted_features, "activity")
data2<-data[,substracted_features]
substracted_features <- grep(pattern = '(mean()|std())', x=features, value=TRUE)
substracted_features <- c("subject_id", substracted_features, "activity")
data2<-data[,substracted_features]
substracted_features <- grep(pattern = '(mean|std)', x=features, value=TRUE)
substracted_features <- c("subject_id", substracted_features, "activity")
data2<-data[,substracted_features]
label <- read.table("activity_labels.txt")
head(labels)
head(label)
label <- read.table("activity_labels.txt")[,2]
label
findLabel <- function(x, label){label[as.numeric(x)]}
ss<-data$activity
ss1<-sapply(ss,findLabel)
findLabel <- function(x){label[as.numeric(x)]}
ss1<-sapply(ss,findLabel)
head(ss1)
data2<-sapply(data2$activity, findLabel)
head(data2$activity)
data2$activity
data2$activity
data2
data2<-data[,substracted_features]
sapply(data2$activity, findLabel)
names(data2)
data2$activity
data <- bind_rows(train_data, test_data)
data2<-data[,substracted_features]
head(data2)
data2$activity<-sapply(data2$activity, findLabel)
head(data2)
filter()
?filter
View(subject_test)
View(subject_train)
i=1
j=STANDING
j='STANDING'
selected <- filter(data_final, subject_id=i, activity = j)
data_final <- data2
selected <- filter(data_final, subject_id=i, activity = j)
selected <- filter(data_final, subject_id==i, activity == j)
head(selected)
tail(selected)
tt <- sapply(selected, mean)
tt
selected <- select(selected, -subject_id, activity)
tt<-sapply(selected, mean)
tt
selected <- filter(data_final, subject_id==i, activity == j)
selected <- select(selected, -subject_id, -activity)
tt <- sapply(selected, mean)
tt
class(tt)
average <- sapply(selected,mean)
averaged_row <- c(i, as.character(average), j)
averaged_row
ss <- data.frame(NULL)
bind_rows(ss,tt)
tt
bind_rows(ss,data.frame(tt)
)
abc <- bind_rows(ss,data.frame(tt))
abc
class(selected)
class(average)
?as.data.frame
ss <- data.frame(NULL)
tt <- bind_rows(ss, averaged_row)
tt <- bind_rows(ss, as.data.frame(averaged_row,optional=TRUE))
bb <- as.data.frame(averaged_row,optional=TRUE)
bb
dim(bb)
dim(t(bb))
bind_rows(ss,t(bb))
class(ss)
class(bb)
class(t(bb))
class(as.data.frame(t(bb))
)
x <- data.frame(NULL)
averaged_row
y <- as.data.frame(t(averaged_row))
dim(y)
tt <- bind_rows(x, y)
dim(tt)
tt
data_mean <- data.frame(NULL)
colnames(data_mean) <- names(data_final)
for (i in 1:30) {
for (j in label) {
selected <- filter(data_final, subject_id==i, activity == j)
selected <- select(selected, -subject_id, -activity)
average <- sapply(selected,mean)
averaged_row <- c(i, as.character(average), j)
temp <- as.data.frame(t(averaged_row))
data_mean <- bind_rows(data_mean, temp)}}
warnings(())
warnings(
)
head(data_mean)
tail(data_mean)
colnames(data_mean) <- names(data_final)
head(data_mean)
mean_names <- names(data_final)
mean_names <- mean_names + "_mean"
mean_names <- paste0(mean_names,"_mean")
mean_names
colnames(data_mean) <- mean_names
names(data_mean)
write(data_mean, file="mean_data.csv")
write(data_mean, file="mean_data.txt")
write.csv(data_mean, "mean_data.csv")
write.csv(data_final, "merged_data.csv")
write.csv(names(data_final), "feature_final.csv")
write.csv(names(data_final), "feature_final.txt")
names(data_final)
aa <- c(
"b_mean", "a_mean", "d_std", "e_std"
)
grep(pattern = "mean", x=aa, value=TRUE)
grep(pattern = -"mean", x=aa, value=TRUE)
aa <- c("b_mean()", "a_mean", "d_std()", "e_std" )
grep(pattern = "mean\\(\\)", x=aa, value=TRUE)
grep(pattern = "mean\\(\\)|std\\(\\)", x=aa, value=TRUE)
rm(list=ls())
library(dplyr)
subject_train <- read.table("./train/subject_train.txt")
train_data_x <- read.table("./train/X_train.txt")
train_data_y <- read.table("./train/y_train.txt")
train_data <- bind_cols(subject_train, train_data_x)
train_data <- bind_cols(train_data, train_data_y)
features <- read.table("features.txt")[,2]
features <- c("subject_id", as.vector(features)
features <- c("subject_id", as.vector(features), "activity")
features_unique <- make.unique(features)
colnames(train_data) <- features_unique
subject_test <- read.table("./test/subject_test.txt")
test_data_x <- read.table("./test/X_test.txt")
test_data_y <- read.table("./test/y_test.txt")
test_data <- bind_cols(subject_test, test_data_x)
test_data <- bind_cols(test_data, test_data_y)
colnames(test_data) <- features_unique
data <- bind_rows(train_data, test_data)
substracted_features <- grep(pattern = '(mean\\(\\)|std\\(\\))', x=features, value=TRUE)
substracted_features <- c("subject_id", substracted_features, "activity")
data2<-data[,substracted_features]
label <- read.table("activity_labels.txt")[,2]
findLabel <- function(x){label[as.numeric(x)]}
data2$activity<-sapply(data2$activity, findLabel)
data_final <- data2
data_mean <- data.frame(NULL)
for (i in 1:30) {
for (j in label) {
selected <- filter(data_final, subject_id==i, activity == j)
selected <- select(selected, -subject_id, -activity)
average <- sapply(selected,mean)
averaged_row <- c(i, as.character(average), j)
temp <- as.data.frame(t(averaged_row))
data_mean <- bind_rows(data_mean, temp)}}
mean_names <- names(data_final)
mean_names <- paste0(mean_names,"_mean")
colnames(data_mean) <- mean_names
write(data_mean, file="mean_data.csv")
write.csv(data_final, "merged_data.csv")
write.csv(names(data_final), "feature_final.csv")
write.csv(data_mean, file="mean_data.csv")
